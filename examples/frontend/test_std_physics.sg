from std.time import Instant, Date;
from std.physics import Point3D;
from std.physics.astronomy import Planet;


fun main() {
    let d = Date.date(2024, 9, 18);
    print("On ");
    d.print();
    println();

    let instant = Instant.from_date(d);

    for let mut i=0; i<8; i+=1; {
        let planet = Planet.PLANETS[i];
        print("Planet: ");
        match planet {
            of Mercury => println("Mercury"),
            of Venus => println("Venus"),
            of Earth => println("Earth"),
            of Mars => println("Mars"),
            of Jupiter => println("Jupiter"),
            of Saturn => println("Saturn"),
            of Uranus => println("Uranus"),
            of Neptune => println("Neptune")
        }

        println(
            "Position (AU): ",
            planet.position_at_instant(instant)
                .convert(m_to_au)
        );
    }
}

fun m_to_au(m: Float): Float {
    return (m / 149597870700.0).round_to(1);
}

main();